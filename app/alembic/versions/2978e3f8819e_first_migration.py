"""First migration

Revision ID: 2978e3f8819e
Revises: 
Create Date: 2022-07-13 21:01:05.492269

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '2978e3f8819e'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('storages',
    sa.Column('uuid', sa.String(), nullable=False),
    sa.Column('file_name', sa.Text(), nullable=True),
    sa.Column('url', sa.Text(), nullable=True),
    sa.Column('mimetype', sa.Text(), nullable=True),
    sa.Column('width', sa.Integer(), nullable=True),
    sa.Column('height', sa.Integer(), nullable=True),
    sa.Column('size', sa.Integer(), nullable=True),
    sa.Column('thumbnail', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('medium', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('date_added', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.Column('date_modified', sa.DateTime(), server_default=sa.text('now()'), nullable=True),
    sa.PrimaryKeyConstraint('uuid'),
    sa.UniqueConstraint('uuid')
    )
    op.create_table('users',
    sa.Column('uuid', sa.String(), nullable=False),
    sa.Column('firstname', sa.String(), nullable=True),
    sa.Column('lastname', sa.String(), nullable=True),
    sa.Column('fullname', sa.String(), nullable=True),
    sa.Column('position', sa.String(), nullable=True),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('phonenumber', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('birth_day', sa.String(), nullable=False),
    sa.Column('profile_pic_uuid', sa.String(), nullable=True),
    sa.Column('date_added', sa.DateTime(timezone=True), nullable=True),
    sa.Column('date_modified', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['profile_pic_uuid'], ['storages.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('publications',
    sa.Column('uuid', sa.String(), nullable=False),
    sa.Column('user_sharer_uuid', sa.String(), nullable=True),
    sa.Column('user_uuid', sa.String(), nullable=True),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('publication_type', sa.String(), nullable=False),
    sa.Column('file_url', sa.String(), nullable=True),
    sa.Column('date_added', sa.DateTime(timezone=True), nullable=True),
    sa.Column('date_modified', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_sharer_uuid'], ['users.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('user_conversations',
    sa.Column('uuid', sa.String(), nullable=False),
    sa.Column('second_user_uuid', sa.String(), nullable=True),
    sa.Column('first_user_uuid', sa.String(), nullable=True),
    sa.Column('date_added', sa.DateTime(timezone=True), nullable=True),
    sa.Column('date_modified', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['first_user_uuid'], ['users.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['second_user_uuid'], ['users.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('user_followers',
    sa.Column('uuid', sa.String(), nullable=False),
    sa.Column('user_uuid', sa.String(), nullable=True),
    sa.Column('follower_uuid', sa.String(), nullable=False),
    sa.Column('date_added', sa.DateTime(timezone=True), nullable=True),
    sa.Column('date_modified', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['follower_uuid'], ['users.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid', 'follower_uuid')
    )
    op.create_table('user_friends',
    sa.Column('uuid', sa.String(), nullable=False),
    sa.Column('user_uuid', sa.String(), nullable=True),
    sa.Column('friend_uuid', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('date_added', sa.DateTime(timezone=True), nullable=True),
    sa.Column('date_modified', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['friend_uuid'], ['users.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid', 'friend_uuid')
    )
    op.create_table('comments',
    sa.Column('uuid', sa.String(), nullable=False),
    sa.Column('comment_to_respond_uuid', sa.String(), nullable=True),
    sa.Column('user_uuid', sa.String(), nullable=True),
    sa.Column('publication_uuid', sa.String(), nullable=True),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('date_added', sa.DateTime(timezone=True), nullable=True),
    sa.Column('date_modified', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['comment_to_respond_uuid'], ['comments.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['publication_uuid'], ['publications.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('conversation_messages',
    sa.Column('uuid', sa.String(), nullable=False),
    sa.Column('conversation_uuid', sa.String(), nullable=True),
    sa.Column('user_uuid', sa.String(), nullable=True),
    sa.Column('content', sa.TEXT(), nullable=False),
    sa.Column('is_call', sa.Boolean(), nullable=False),
    sa.Column('call_duration', sa.Integer(), nullable=True),
    sa.Column('date_added', sa.DateTime(timezone=True), nullable=True),
    sa.Column('date_modified', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['conversation_uuid'], ['user_conversations.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('likes',
    sa.Column('uuid', sa.String(), nullable=False),
    sa.Column('user_uuid', sa.String(), nullable=True),
    sa.Column('publication_uuid', sa.String(), nullable=True),
    sa.Column('date_added', sa.DateTime(timezone=True), nullable=True),
    sa.Column('date_modified', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['publication_uuid'], ['publications.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_table('comment_likes',
    sa.Column('uuid', sa.String(), nullable=False),
    sa.Column('user_uuid', sa.String(), nullable=True),
    sa.Column('comment_uuid', sa.String(), nullable=True),
    sa.Column('date_added', sa.DateTime(timezone=True), nullable=True),
    sa.Column('date_modified', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['comment_uuid'], ['comments.uuid'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['user_uuid'], ['users.uuid'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('uuid')
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('comment_likes')
    op.drop_table('likes')
    op.drop_table('conversation_messages')
    op.drop_table('comments')
    op.drop_table('user_friends')
    op.drop_table('user_followers')
    op.drop_table('user_conversations')
    op.drop_table('publications')
    op.drop_table('users')
    op.drop_table('storages')
    # ### end Alembic commands ###
